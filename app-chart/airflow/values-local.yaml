## 0. 실행 모드
executor: "KubernetesExecutor"

## 1. 환경 설정
env: 
  - name: AIRFLOW__CORE__LOAD_EXAMPLES
    value: "False"
  - name: AIRFLOW__CORE__TESET_CONNECTION
    value: "enabled"
  - name: AIRFLOW__KUBERNETES__DELETE_WORKER_PODS
    value: "True"

## 2. Web 서버에 호스트 볼륨 추가
web:
  extraVolumes:
    # DAGs
    - name: host-dags
      hostPath:
        path: /opt/airflow/dags
        type: DirectoryOrCreate
  extraVolumeMounts:
    - name: host-dags
      mountPath: /opt/airflow/dags

## 3. Scheduler에도 동일하게 마운트
scheduler:
  extraVolumes:
    - name: host-dags
      hostPath:
        path: /opt/airflow/dags
        type: DirectoryOrCreate
  extraVolumeMounts:
    - name: host-dags
      mountPath: /opt/airflow/dags

## 4. Worker (Triggerer 포함)에도 동일하게 마운트
workers:
  extraVolumes:
    - name: host-dags
      hostPath:
        path: /opt/airflow/dags
        type: DirectoryOrCreate
  extraVolumeMounts:
    - name: host-dags
      mountPath: /opt/airflow/dags

triggerer:
  extraVolumes:
    - name: host-dags
      hostPath:
        path: /opt/airflow/dags
        type: DirectoryOrCreate
  extraVolumeMounts:
    - name: host-dags
      mountPath: /opt/airflow/dags

## 5. airflow-custom 이미지 사용
defaultAirflowRepository: airflow-local
defaultAirflowTag: "2.10.5"
airflowVersion: "2.10.5"

## 6. 프로메테우스 모니터링 추가
metrics:
  enabled: true
  statsd:
    enabled: true
    host: "127.0.0.1"
    port: 9125
  serviceMonitor:
    enabled: true
    namespace: monitoring       # Prometheus가 모니터링하는 네임스페이스
    interval: 15s
    labels:
      release: monitoring       # ServiceMonitor가 Prometheus에 잡히도록
extraContainers:
  - name: statsd-exporter
    image: prom/statsd-exporter:v0.23.0
    args:
      - "--statsd.listen-udp=:9125"
      - "--telemetry.telemetry-path=/metrics"
    ports:
      - name: metrics
        containerPort: 9102
